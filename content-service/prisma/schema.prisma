// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// âœ… Enum for Module Status
enum ModuleStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

// âœ… Enum for Host Type
enum HostType {
  SPACE
  COURSE
  COHORT
}

// âœ… Enum for Module Types
// enum ModuleType {
//   FEED
//   IMAGE
//   EVENT
//   CHAT
//   ASSIGNMENT
//   QUIZ
//   CHALLENGE
//   LESSON
//   CERTIFICATE
//   COURSE
//   COHORT
// }

// âœ… ModuleType Table (e.g. Feed, Event, Image, etc.)
model ModuleType {
  id        String   @id @default(uuid())
  name      String   @unique // FEED, EVENT, IMAGE, CHAT, etc.
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  modules Module[]
}

// âœ… Content Table (Stores Metadata & Links to Space)
// model Content {
//   id            String        @id @default(uuid())
//   title         String
//   description   String?
//   contentTypeId String // FK to ContentType
//   spaceId       String // ðŸ”¥ Store Space ID (Foreign Key from Community Service)
//   createdBy     String // ðŸ”¥ Store User ID (Foreign Key from User Service)
//   status        ContentStatus @default(DRAFT)
//   createdAt     DateTime      @default(now())
//   updatedAt     DateTime      @updatedAt

//   // Relations  
//   contentType ContentType @relation(fields: [contentTypeId], references: [id])

//   // âœ… Corrected Relations (Added `references` on child models)
//   postContent  Posts?
//   eventContent Events?
//   chatContent  Chats?
//   imageContent Images?
// }

// model Module {
//   id             String       @id @default(uuid())
//   title          String
//   // slug           String       @unique
//   description    String?
//   spaceId        String? // From Community Service (nullable if it's not inside a space)
//   parentModuleId String? // Self-reference to parent module (for nesting)
//   hostType       HostType? // SPACE / COURSE / COHORT â€” defines where this module lives
//   createdBy      String
//   status         ModuleStatus @default(DRAFT)
//   moduleTypeId   String // FK to ModuleType
//   createdAt      DateTime     @default(now())
//   updatedAt      DateTime     @updatedAt

//   // Relations
//   type         ModuleType @relation(fields: [moduleTypeId], references: [id])
//   parentModule Module?    @relation("Parent", fields: [parentModuleId], references: [id])
//   subModules   Module[]   @relation("Parent")

//   // ðŸ”— One-to-one relations to content types
//   feedContent  Feeds?
//   eventContent Events?
//   chatContent  Chats?
//   imageContent Images?
// }

model Module {
  id   String @id @default(uuid())
  slug String @unique

  hostType HostType // COURSE / COHORT / SPACE
  hostId   String // ID of the host entity

  moduleTypeId String
  createdBy    String
  status       ModuleStatus @default(DRAFT)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  type ModuleType @relation(fields: [moduleTypeId], references: [id])

  // ðŸ”— One-to-one relations to content types
  feedContent  Feeds?
  eventContent Events?
  chatContent  Chats?
  imageContent Images?
}

// âœ… Feed Module (Previously `Posts`)
model Feeds {
  id        String   @id @default(uuid())
  moduleId  String   @unique // FK to Module
  content   Json // Editor.js JSON data
  createdBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  module Module @relation(fields: [moduleId], references: [id])
}

// ðŸ”¥ Events (With Date & Location)
model Events {
  id        String   @id @default(uuid())
  moduleId  String   @unique // FK to Content
  eventDate DateTime
  location  String?
  createdBy String // ðŸ”¥ User who created the content

  // âœ… Zoom Integration Fields
  zoomMeetingId String? // ðŸ”¥ Unique Meeting ID from Zoom
  zoomHostId    String? // ðŸ”¥ Host ID from Zoom
  zoomJoinUrl   String? // ðŸ”¥ Participant Join Link
  zoomStartUrl  String? // ðŸ”¥ Host Start Link

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  module Module @relation(fields: [moduleId], references: [id])
}

// ðŸ”¥ Chats (Messages)
model Chats {
  id        String   @id @default(uuid())
  moduleId  String   @unique // FK to Content
  message   String
  createdBy String // ðŸ”¥ User who created the content
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  module Module @relation(fields: [moduleId], references: [id])
}

// ðŸ”¥ Images (With Image URL)
model Images {
  id        String   @id @default(uuid())
  moduleId  String   @unique // FK to Content
  imageUrl  String
  createdBy String // ðŸ”¥ User who created the content
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  module Module @relation(fields: [moduleId], references: [id])
}

// ðŸ”¥ User Model (Only FK Reference to User Service)
model User {
  id String @id @default(uuid())
}
